microservice-chart:
  namespace: "idpay"
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  deployment:
    create: true

  service:
    create: true
    type: ClusterIP
    port: 8080

  ingress:
    create: true
    host: "dev01.idpay.internal.dev.cstar.pagopa.it"
    path: /idpay/reward/notification/(.*)

  serviceAccount:
    create: false
    annotations: { }
    name: ""

  podAnnotations: { }

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false

  envConfig:
    MONGODB_DBNAME: "idpay"
    APPLICATIONINSIGHTS_ROLE_NAME: "idpayrewardnotification"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "OFF"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"

  envConfigMapExternals:
    idpay-common:
      TZ: TZ
    idpay-eventhub-01:
      KAFKA_BROKER: kafka_broker
      KAFKA_CONFIG_SASL_MECHANISM: kafka_sasl_mechanism
      KAFKA_REFUND_RULE_REQUEST_BROKER: kafka_broker
      KAFKA_REFUND_RULE_REQUEST_TOPIC: idpay_rule_update_topic
      KAFKA_ERRORS_BROKER: kafka_broker
      KAFKA_ERRORS_TOPIC: idpay_error_topic

  envSecret:
    aks-api-url: cstar-d-weu-dev01-aks-apiserver-url
    #    APPLICATIONINSIGHTS_CONNECTION_STRING: appinsights-instrumentation-key
    MONGODB_URI: mongodb-connection-string
    KAFKA_REFUND_RULE_REQUEST_SASL_JAAS_CONFIG: evh-idpay-rule-update-idpay-rule-update-consumer-jaas-config-idpay-01
    KAFKA_ERRORS_SASL_JAAS_CONFIG: evh-idpay-errors-idpay-errors-producer-jaas-config-idpay-01