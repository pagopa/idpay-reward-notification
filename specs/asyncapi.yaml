asyncapi: 2.0.0
info:
  title: Reward Notification Service
  version: 1.0.0
  description: >-
    Its purpose is to notify allowed citizen notification and cancellation of an initiative
tags:
  - name: "refundRuleConsumer"
    description: ""
  - name: "refundRuleNotifyError"
    description: ""
  - name: "rewardTrxConsumer"
    description: ""
  - name: "rewardTrxNotifyEvaluationError"
    description: ""
  - name: "ibanOutcomeConsumer"
    description: ""
  - name: "ibanNotifyOutcomeEvaluationError"
    description: ""
  - name: "rewardNotificationUploadConsumer"
    description: ""
  - name: "rewardNotificationUploadError"
    description: ""
  - name: "rewardNotificationFeedback"
    description: ""
  - name: "rewardNotificationFeedbackError"
    description: ""
  - name: "deleteInitiative"
    description: "Delete the initiative"
  - name: "deleteInitiativeError"
    description: "Error of delete initiative"
channels:
  reward-notification-refund-rule-consumer:
    subscribe:
      message:
        $ref: '#/components/messages/RewardNotificationRule'
      bindings:
        kafka:
          topic: idpay-rule-update
      tags:
        - name: "refundRuleConsumer"
  reward-notification-refund-rule-error:
    publish:
      message:
        $ref: '#/components/messages/RewardNotificationRuleError'
      bindings:
        kafka:
          topic: idpay-error
      tags:
        - name: "refundRuleNotifyError"
  reward-notification-reward-trx-consumer:
    subscribe:
      message:
        $ref: '#/components/messages/RewardNotificationEvaluation'
      bindings:
        kafka:
          topic: idpay-transaction
      tags:
        - name: "rewardTrxConsumer"
  reward-notification-reward-trx-error:
    publish:
      message:
        $ref: '#/components/messages/RewardNotificationEvaluationError'
      bindings:
        kafka:
          topic: idpay-error
      tags:
        - name: "rewardTrxNotifyEvaluationError"
  reward-notification-iban-outcome-consumer:
    subscribe:
      message:
        $ref: '#/components/messages/RewardIbanOutcomeEvaluation'
      bindings:
        kafka:
          topic: idpay-checkiban-outcome
      tags:
        - name: "ibanOutcomeConsumer"
  reward-notification-iban-outcome-error:
    publish:
      message:
        $ref: '#/components/messages/RewardIbanOutcomeEvaluationError'
      bindings:
        kafka:
          topic: idpay-error
      tags:
        - name: "ibanNotifyOutcomeEvaluationError"
  reward-notification-upload-consumer:
    subscribe:
      message:
        $ref: '#/components/messages/RewardNotificationUploadRefundedStatus'
      bindings:
        kafka:
          topic: idpay-reward-notification-storage-events
      tags:
        - name: "rewardNotificationUploadConsumer"
  reward-notification-upload-error:
    publish:
      message:
        $ref: '#/components/messages/RewardNotificationUploadRefundedStatusError'
      bindings:
        kafka:
          topic: idpay-error
      tags:
        - name: "rewardNotificationUploadError"
  reward-notification-feedback:
    publish:
      message:
        $ref: '#/components/messages/OrganizationFeedbackUpload'
      bindings:
        kafka:
          topic: idpay-reward-notification-response
      tags:
        - name: "rewardNotificationFeedback"
  reward-notification-feedback-error:
    publish:
      message:
        $ref: '#/components/messages/OrganizationFeedbackUploadError'
      bindings:
        kafka:
          topic: idpay-error
      tags:
        - name: "rewardNotificationFeedbackError"
  reward-notification-delete-initiative-consumer:
    subscribe:
      message:
        $ref: '#/components/messages/DeleteInitiative'
      bindings:
        kafka:
          topic: idpay-commands
      tags:
        - name: "deleteInitiative"
  reward-notification-delete-initiative-error:
    publish:
      message:
        $ref: '#/components/messages/DeleteInitiativeError'
      bindings:
        kafka:
          topic: idpay-error
      tags:
        - name: "deleteInitiativeError"
components:
  messages:
    RewardNotificationRule:
      contentType: application/json
      description: >-
        Receive reward notification rule initiative
      summary: Information about reward notification rule
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-portal-welfare-backend-initiative/main/specs/asyncapi.yml#/components/schemas/RuleUpdate"
    RewardNotificationRuleError:
      contentType: application/json
      description: >-
        An error occurred during the handling of the reward notification rule initiative
      summary: Informs of reward notification rule handling error
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-portal-welfare-backend-initiative/main/specs/asyncapi.yml#/components/schemas/RuleUpdate"
    RewardNotificationEvaluation:
      contentType: application/json
      description: >-
        Receive information about the evaluation of the reward notification
      summary: Information about reward notification evaluation
      payload:
        oneOf:
          - $ref: 'https://raw.githubusercontent.com/pagopa/idpay-payment/main/specs/asyncapi.yml#/components/schemas/TransactionInProgress'
          - $ref: 'https://raw.githubusercontent.com/pagopa/idpay-reward-calculator/main/specs/asyncapi.yaml#/components/schemas/TransactionProcessed'
          - $ref: 'https://raw.githubusercontent.com/pagopa/idpay-reward-user-id-splitter/main/specs/asyncapi.yaml#/components/schemas/TransactionRejectedDTO'

    RewardNotificationEvaluationError:
      contentType: application/json
      description: >-
        An error occurred during the evaluation of the reward notification
      summary: Informs of reward notification evaluation error
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        oneOf:
          - $ref: 'https://raw.githubusercontent.com/pagopa/idpay-payment/main/specs/asyncapi.yml#/components/schemas/TransactionInProgress'
          - $ref: 'https://raw.githubusercontent.com/pagopa/idpay-reward-calculator/main/specs/asyncapi.yaml#/components/schemas/TransactionProcessed'
          - $ref: 'https://raw.githubusercontent.com/pagopa/idpay-reward-user-id-splitter/main/specs/asyncapi.yaml#/components/schemas/TransactionRejectedDTO'
    RewardIbanOutcomeEvaluation:
      contentType: application/json
      description: >-
        Receive information about evaluation of the IBAN outcome for reward notification
      summary: Information about IBAN outcome evaluation for reward notification
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-iban/main/specs/asyncapi.yml#/components/schemas/IbanQueueWalletDTO"
    RewardIbanOutcomeEvaluationError:
      contentType: application/json
      description: >-
        An error occurred during the evaluation of the IBAN outcome for reward notification
      summary: Informs of IBAN outcome evaluation error for reward notification
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-iban/main/specs/asyncapi.yml#/components/schemas/IbanQueueWalletDTO"
    RewardNotificationUploadRefundedStatus:
      contentType: application/json
      description: >-
        Receive information about upload refunded status
      summary: Informations about upload of refunded status
      payload:
        $ref: "#/components/schemas/StorageEventDto"
    RewardNotificationUploadRefundedStatusError:
      contentType: application/json
      description: >-
        Send information about upload refunded status error
      summary: Informations about upload of refunded status
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "#/components/schemas/StorageEventDto"
    OrganizationFeedbackUpload:
      contentType: application/json
      description: >-
        Send information about organization feedback upload
      summary: Information about organization feedback upload
      headers:
        properties:
          kafka_messageKey:
            type: "string"
            description: concatenation of beneficiaryId and initiativeId (beneficiaryId_initiativeId)
            example: "bcf3651c-d2d3-4998-81a9-5f24302ab_674661626073785876cb5aa7601"
      payload:
        $ref: "#/components/schemas/RewardFeedbackDTO"
    OrganizationFeedbackUploadError:
      contentType: application/json
      description: >-
        An error occurred during the handling of the organization feedback upload event for reward notification
      summary: Informs of organization feedback upload event handling error for reward notification
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "#/components/schemas/RewardFeedbackDTO"
    DeleteInitiative:
      contentType: application/json
      description: >-
        Event consumed from application when a delete initiative command has published
      summary: Delete documents of the initiative
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-portal-welfare-backend-initiative/main/specs/asyncapi.yml#/components/schemas/QueueCommandOperationDTO"
    DeleteInitiativeError:
      contentType: application/json
      description: >-
        An error occured when a delete initiative command has published
      summary: Delete documents of the initiative error
      headers:
        $ref:  "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-portal-welfare-backend-initiative/main/specs/asyncapi.yml#/components/schemas/QueueCommandOperationDTO"

  schemas:
    RewardFeedbackDTO:
      type: object
      description: DTO for reward feedback
      properties:
        id:
          type: string
          description: ID of the reward feedback
        externalId:
          type: string
          description: External ID associated with the reward feedback
        initiativeId:
          type: string
          description: ID of the initiative
        beneficiaryId:
          type: string
          description: ID of the beneficiary
        beneficiaryType:
          $ref: '#/components/schemas/BeneficiaryType'
        organizationId:
          type: string
          description: ID of the organization
        rewardNotificationId:
          type: string
          description: ID of the reward notification
        iban:
          type: string
          description: IBAN associated with the reward feedback
        status:
          type: string
          description: Status of the reward feedback
        rewardStatus:
          $ref: '#/components/schemas/RewardNotificationStatus'
        rejectionCode:
          type: string
          description: Code associated with rejection of the reward
        rejectionReason:
          type: string
          description: Reason for rejection of the reward
        refundType:
          $ref: '#/components/schemas/RefundType'
        rewardCents:
          type: integer
          format: int64
          description: Reward amount in cents
        effectiveRewardCents:
          type: integer
          format: int64
          description: Effective reward amount in cents
        startDate:
          type: string
          format: date
          description: Start date of the reward feedback
        endDate:
          type: string
          format: date
          description: End date of the reward feedback
        feedbackDate:
          type: string
          format: date-time
          description: Feedback date of the reward feedback
        feedbackProgressive:
          type: integer
          description: Progressive feedback number
        executionDate:
          type: string
          format: date
          description: Execution date of the reward feedback
        cro:
          type: string
          description: CRO (Customer Reference Number) associated with the reward feedback
        transferDate:
          type: string
          format: date
          description: Transfer date of the reward feedback
        userNotificationDate:
          type: string
          format: date
          description: User notification date of the reward feedback

    BeneficiaryType:
      type: string
      enum:
        - CITIZEN
        - MERCHANT
      description: Type of beneficiary

    RewardNotificationStatus:
      type: string
      enum:
        - TO_SEND
        - SKIPPED
        - ERROR
        - RECOVERED
        - EXPORTED
        - COMPLETED_OK
        - COMPLETED_KO
        - SUSPENDED
      description: Status of the reward notification

    RefundType:
      type: string
      enum:
        - ORDINARY
        - REMEDIAL
      description: Type of refund
    Reward:
      type: object
      properties:
        initiativeId:
          type: string
          description: Id of the initiative
          example: 661626073785876cb5aa7601
        organizationId:
          type: string
          description: Identifier of the organization associated with the initiative
          example: c326cac6-a38c-416c-a3c3-f6a407b77950
        providedRewardCents:
          type: integer
          format: int64
          description: reward calculated by rule engine
          example: 30000
        accruedRewardCents:
          type: integer
          format: int64
          description: reward updated after evaluation of any limits (budget, ecc...)
          example: 30000
        capped:
          type: boolean
          description: If the premium has been limited due to the beneficiary's budget
          example: false
        dailyCapped:
          type: boolean
          description: If the premium has been reached, it causes a daily limit
          example: false
        monthlyCapped:
          type: boolean
          description: If the premium has been reached, it causes a monthly limit
          example: false
        yearlyCapped:
          type: boolean
          description: If the premium has been reached, it causes an annual limit
          example: false
        weeklyCapped:
          type: boolean
          description: If the premium has been reached due to weekly limit
          example: false
        refund:
          type: boolean
          description: If the user has been refunded
          example: false
        completeRefund:
          type: boolean
          description: If the user has been fully refunded
          example: false
        counters:
          $ref: "#/components/schemas/Counter"
    Counter:
      type: object
      properties:
        trxNumber:
          type: integer
          format: int64
          description: transaction number
          example: 1
        totalRewardCents:
          type: integer
          format: int64
          description: total reward
          example: 30000
        totalAmountCents:
          type: integer
          format: int64
          description: total amount
          example: 900000
        exhaustedBudget:
          type: boolean
          description: if the budget is exhausted
        initiativeBudgetCents:
          type: integer
          format: int64
          description: initiative budget
          example: 30000
        version:
          type: integer
          format: int64
          description: sequence operation number
          example: 1
    InitiativeRefund2StoreDTO:
      type: object
      description: DTO for storing refund initiatives
      properties:
        initiativeId:
          type: string
          description: ID of the initiative
        initiativeName:
          type: string
          description: Name of the initiative
        organizationId:
          type: string
          description: ID of the organization
        organizationVat:
          type: string
          description: VAT of the organization
        general:
          $ref: "#/components/schemas/InitiativeGeneralDTO"
          description: General information about the initiative
        refundRule:
          $ref: "#/components/schemas/InitiativeRefundRuleDTO"
          description: Rule for refunding initiatives
        initiativeRewardType:
          $ref: "#/components/schemas/InitiativeRewardType"
          description: Type of reward for the initiative
    InitiativeGeneralDTO:
      type: object
      description: General information about an initiative
      properties:
        endDate:
          type: string
          format: date
          description: End date of the initiative
    InitiativeRefundRuleDTO:
      type: object
      description: Rule for refunding initiatives
      properties:
        accumulatedAmount:
          $ref: "#/components/schemas/AccumulatedAmountDTO"
          description: Accumulated amount for refund
        timeParameter:
          $ref: "#/components/schemas/TimeParameterDTO"
          description: Time parameter for refund
    AccumulatedAmountDTO:
      type: object
      description: Accumulated amount for refund
      properties:
        accumulatedType:
          $ref: "#/components/schemas/AccumulatedTypeEnum"
          description: Type of accumulated amount
        refundThresholdCents:
          type: integer
          description: Threshold for refund in cents
    TimeParameterDTO:
      type: object
      description: Time parameter for refund
      properties:
        timeType:
          $ref: "#/components/schemas/TimeTypeEnum"
          description: Type of time parameter
    AccumulatedTypeEnum:
      type: string
      enum:
        - BUDGET_EXHAUSTED
        - THRESHOLD_REACHED
      description: Type of accumulated amount
    TimeTypeEnum:
      type: string
      enum:
        - CLOSED
        - DAILY
        - WEEKLY
        - MONTHLY
        - QUARTERLY
      description: Type of time parameter
    InitiativeRewardType:
      type: string
      enum:
        - DISCOUNT
        - REFUND
      description: Type of reward for an initiative
    RewardTransactionDTO:
      type: object
      description: DTO for reward transaction
      allOf:
        - $ref: "#/components/schemas/TransactionDTO"
      properties:
        status:
          type: string
          description: Status of the reward transaction
        initiativeRejectionReasons:
          type: object
          description: Reasons for rejection by initiative
          additionalProperties:
            type: array
            items:
              type: string
        rewards:
          type: object
          description: Rewards associated with the transaction
          additionalProperties:
            $ref: "#/components/schemas/Reward"
    TransactionDTO:
      type: object
      properties:
        idTrxAcquirer:
          type: string
          description: ID of the transaction from the acquirer
        acquirerCode:
          type: string
          description: Code of the acquirer
        trxDate:
          type: string
          format: date-time
          description: Date and time of the transaction
        hpan:
          type: string
          description: HPAN (Hashed PAN)
        operationType:
          type: string
          description: Type of operation
        circuitType:
          type: string
          description: Type of circuit
        idTrxIssuer:
          type: string
          description: ID of the transaction issuer
        correlationId:
          type: string
          description: Correlation ID
        amount:
          type: number
          description: Amount of the transaction
        amountCurrency:
          type: string
          description: Currency of the transaction amount
        mcc:
          type: string
          description: Merchant Category Code
        acquirerId:
          type: string
          description: ID of the acquirer
        merchantId:
          type: string
          description: ID of the merchant
        terminalId:
          type: string
          description: ID of the terminal
        bin:
          type: string
          description: Bank Identification Number
        senderCode:
          type: string
          description: Sender code
        fiscalCode:
          type: string
          description: Fiscal code
        vat:
          type: string
          description: VAT (Value Added Tax) number
        posType:
          type: string
          description: Type of point of sale
        par:
          type: string
          description: PAR (Parameter) value
        id:
          type: string
          description: ID of the transaction
        operationTypeTranscoded:
          type: string
          description: Transcoded type of operation
        rejectionReasons:
          type: array
          items:
            type: string
          description: List of rejection reasons
        amountCents:
          type: integer
          description: Amount of the transaction in cents
        effectiveAmountCents:
          type: integer
          description: Effective amount of the transaction in cents
        trxChargeDate:
          type: string
          format: date-time
          description: Date and time of the transaction charge
        refundInfo:
          $ref: "#/components/schemas/RefundInfo"
          description: Information about refund
        channel:
          type: string
          description: Channel of the transaction
        ruleEngineTopicPartition:
          type: integer
          description: Partition of the rule engine topic
        ruleEngineTopicOffset:
          type: integer
          description: Offset of the rule engine topic
        userId:
          type: string
          description: User ID
        brandLogo:
          type: string
          description: Brand logo
        brand:
          type: string
          description: Brand
        maskedPan:
          type: string
          description: Masked PAN
    RefundInfo:
      type: object
      properties:
        previousTrxs:
          type: array
          items:
            $ref: "#/components/schemas/TransactionProcessed"
          description: List of previous transactions
        previousRewards:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/RefundInfo.PreviousReward"
          description: Map of previous rewards
    RefundInfo.PreviousReward:
      type: object
      properties:
        initiativeId:
          type: string
          description: ID of the initiative
        organizationId:
          type: string
          description: ID of the organization
        accruedRewardCents:
          type: integer
          description: Accrued reward in cents
    TransactionProcessed:
      type: object
      properties:
        id:
          type: string
          description: ID of the transaction
        idTrxAcquirer:
          type: string
          description: ID of the transaction from the acquirer
        acquirerCode:
          type: string
          description: Code of the acquirer
        trxDate:
          type: string
          format: date-time
          description: Date and time of the transaction
        operationType:
          type: string
          description: Type of operation
        acquirerId:
          type: string
          description: ID of the acquirer
        userId:
          type: string
          description: User ID
        correlationId:
          type: string
          description: Correlation ID
        amount:
          type: number
          description: Amount of the transaction
        rewards:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Reward"
          description: Map of rewards
        status:
          type: string
          description: Status of the transaction
        rejectionReasons:
          type: array
          items:
            type: string
          description: List of rejection reasons
        initiativeRejectionReasons:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Map of initiative rejection reasons
        refundInfo:
          $ref: "#/components/schemas/RefundInfo"
          description: Information about refund
        initiatives:
          type: array
          items:
            type: string
          description: List of initiatives
        effectiveAmountCents:
          type: integer
          description: Effective amount of the transaction in cents
        amountCents:
          type: integer
          description: Amount of the transaction in cents
        trxChargeDate:
          type: string
          format: date-time
          description: Date and time of the transaction charge
        operationTypeTranscoded:
          type: string
          description: Transcoded type of operation
        elaborationDateTime:
          type: string
          format: date-time
          description: Date and time of transaction elaboration
        channel:
          type: string
          description: Channel of the transaction
        ruleEngineTopicPartition:
          type: integer
          description: Partition of the rule engine topic
        ruleEngineTopicOffset:
          type: integer
          description: Offset of the rule engine topic
    IbanOutcomeDTO:
      type: object
      description: DTO for IBAN outcome
      properties:
        userId:
          type: string
          description: User ID associated with the IBAN outcome
        initiativeId:
          type: string
          description: Initiative ID associated with the IBAN outcome
        iban:
          type: string
          description: IBAN associated with the outcome
        status:
          type: string
          description: Status of the IBAN outcome
    StorageEventDto:
      type: object
      description: DTO for storage events
      properties:
        id:
          type: string
          description: ID of the storage event
        subject:
          type: string
          description: Subject of the storage event
        eventType:
          type: string
          description: Type of the storage event
        data:
          $ref: '#/components/schemas/StorageEventData'
        eventTime:
          type: string
          format: date-time
          description: Timestamp of the storage event
    StorageEventData:
      type: object
      description: Data associated with a storage event
      properties:
        eTag:
          type: string
          description: ETag associated with the storage event
        contentLength:
          type: integer
          description: Length of the content associated with the storage event
        url:
          type: string
          description: URL associated with the storage event
    ErrorQueueHeader:
      type: object
      properties:
        key:
          type: string
          description: "user id"
          example: "bcf3651c-d2d3-4998-81a9-5f24302ab674"
        applicationName:
          type: string
          description: The name of the application that generated the error.
          example: "reward-service"
        group:
          type: string
          description: The Kafka group to which the error message belongs.
          example: "reward-notification-rule"
        srcType:
          type: string
          description: The type of the source of the error message.
          example: "kafka"
        srcServer:
          type: string
          description: The source server of the error message.
          example: "kafka-broker-1.example.com:9092"
        srcTopic:
          type: string
          description: The Kafka topic of the source of the error message.
          example: "reward-notification-rule-topic"
        description:
          type: string
          description: Description of the error.
          example: "An error occurred during the handling of the reward notification rule initiative"
        retryable:
          type: boolean
          description: Indicates whether the error is retryable or not.
        stacktrace:
          type: string
          description: The stack trace of the error.
          example: "RewardNotificationRuleException -> Error occurred during handling of reward notification rule initiative"
        rootCauseClass:
          type: string
          description: Cause of the error.
          example: "com.example.RewardNotificationRuleException"
        rootCauseMessage:
          type: string
          description: Message of the error.
          example: "Error occurred during handling of reward notification rule initiative"